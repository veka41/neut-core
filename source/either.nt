import {
  this.unit {Unit},
}

data either(e, a) {
| Left(e)
| Right(a)
}

inline none<a>(): ?a {
  Left(Unit)
}

define from-option<a>(none-or-value: ?a, fallback: a): a {
  match none-or-value {
  | Right(value) =>
    value
  | Left(_) =>
    fallback
  }
}

define to-option<a, b>(e: either(a, b)): ?b {
  catch _ = e in
  none()
}
