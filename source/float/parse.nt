import {
  this.bool,
  this.either {Left, Right},
  this.memory {load-int, load-int8},
  this.text {_get-content-pointer, text},
  this.unit {Unit},
}

foreign {
  strtod(pointer, pointer): float,
}

inline parse-float(t: &text): ?float {
  let c-int-str: int = _get-content-pointer(t) in
  let end-ptr = magic alloca(int, 1) in
  let float-val: float = magic external strtod(c-int-str, end-ptr) in
  let end-char-ptr = load-int(end-ptr) in
  let end-char = load-int8(end-char-ptr) in
  if eq-int8(end-char, 0) {
    Right(float-val)
  } else {
    Left(Unit)
  }
}
