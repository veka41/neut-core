import {
  this.bool {bool},
  this.eq {Eq, eq},
  this.box,
  this.rune {_Rune, rune},
}

define eq-rune(r1: rune, r2: rune): bool {
  let _Rune(r1) = r1 in
  let _Rune(r2) = r2 in
  eq-int32(r1, r2)
}

define ne-rune(r1: rune, r2: rune): bool {
  let _Rune(r1) = r1 in
  let _Rune(r2) = r2 in
  ne-int32(r1, r2)
}

constant as-eq: eq(rune) {
  Eq of {
    equal = eq-rune,
  }
}

constant as-eq-N: eq(&rune) {
  Eq of {
    equal = {
      function (x, y) {
        as-eq::equal(*x, *y)
      }
    },
  }
}
