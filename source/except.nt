import {
  this.unit {Unit},
}

data except(e, a) {
| Error(e)
| OK(a)
}

inline none<a>: ?a {
  Error(Unit)
}

define from-option<a>(value-or-none: ?a, fallback: a): a {
  match value-or-none {
  | OK(value) =>
    value
  | Error(_) =>
    fallback
  }
}

define to-option<e, a>(value-or-error: except(e, a)): ?a {
  match value-or-error {
  | OK(value) =>
    OK(value)
  | Error(_) =>
    none
  }
}
