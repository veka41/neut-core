import {
- this.bool
- this.ordering [GT, LT, EQ]
- this.field [field, Field]
- this.semiring [semiring, from-field]
- e
- ordered [ordered, Ordered]
}

inline as-entity(): e.entity(float) {
  e.from-ordered(as-ordered())
}

inline as-ordered(): ordered(float) {
  Ordered of {
  - identity => eq-float
  - order =>
    (x, y) => {
      if gt-float(x, y) {
        GT
      } else-if lt-float(x, y) {
        LT
      } else {
        EQ
      }
    }
  }
}

inline as-field(): field(float) {
  Field of {
  - zero => 0
  - add => add-float
  - sub => sub-float
  - one => 1
  - mul => mul-float
  - div => div-float
  }
}

inline as-semiring(): semiring(float) {
  from-field(as-field())
}
