import {
- this.bool
- this.field [field, Field]
- this.ring [ring]
- this.semiring [semiring]
- e
- lo [loset, Loset]
- o [GT, LT, EQ]
}

constant as-field: field(float) {
  Field of {
  - zero = 0
  - add = add-float
  - sub = sub-float
  - one = 1
  - mul = mul-float
  - div = div-float
  }
}

constant as-loset: loset(float) {
  Loset of {
  - cmp =
    (x, y) => {
      if gt-float(*x, *y) {
        GT
      } else-if lt-float(*x, *y) {
        LT
      } else {
        EQ
      }
    }
  }
}

constant as-ring: ring(float) {
  this.ring.from-field(as-field)
}

constant as-semiring: semiring(float) {
  this.semiring.from-field(as-field)
}

constant as-entity: e.entity(float) {
  e.from-loset(as-loset)
}
