import {
  Magic,
  this.bool {bool},
  this.c-string {c-string, from-c-string},
  this.either {Right, none},
  this.errno {report-system-error, system},
  this.text {_get-content-pointer, text},
  this.unit {Unit, unit},
}

foreign {
  getenv(pointer): pointer,
  setenv(pointer, pointer, int): pointer,
  putenv(pointer, pointer): pointer,
}

define get-env(name: &text): ?text {
  let c-str = _get-content-pointer(name) in
  let tmp = magic external getenv(c-str) in
  if eq-int(tmp, 0) {
    none()
  } else {
    Right(from-c-string(Magic.cast(int, c-string, tmp)))
  }
}

define set-env(name: &text, value: &text, overwrite: bool): system(unit) {
  let name-c-str = _get-content-pointer(name) in
  let value-c-str = _get-content-pointer(value) in
  let flag: int =
    if overwrite {
      1
    } else {
      0
    }
  in
  let result = magic external setenv(name-c-str, value-c-str, flag) in
  if eq-int(result, 0) {
    Right(Unit)
  } else {
    report-system-error()
  }
}
