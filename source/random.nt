foreign {
  arc4random_uniform(int): int,
}

define random(ubound: int): int {
  introspect os {
  | darwin =>
    magic external arc4random_uniform(ubound)
  | linux =>
    // requires glibc >= 2.36
    magic external arc4random_uniform(ubound)
  }
}

define random-in-range(lower-bound: int, upper-bound: int): int {
  let range-size = sub-int(upper-bound, lower-bound) in
  let value = random(add-int(range-size, 1)) in
  let offset = div-int(range-size, 2) in
  sub-int(value, offset)
}
