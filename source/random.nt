import {
  this.foreign {UINT32_MAX},
}

foreign {
  arc4random_uniform(int): int,
}

define random(ubound: int): int {
  introspect os {
  | darwin =>
    magic external arc4random_uniform(ubound)
  | linux =>
    // requires glibc >= 2.36
    magic external arc4random_uniform(ubound)
  }
}

define random-in-range(lower-bound: int, upper-bound: int): int {
  let range-size = sub-int(upper-bound, lower-bound) in
  let value = random(add-int(range-size, 1)) in
  add-int(value, lower-bound)
}

define random-float(min: float, max: float): float {
  let numerator = random(UINT32_MAX) in
  let denominator = UINT32_MAX in
  add-float(
    min,
    mul-float(
      div-float(uitofp-int-float(numerator), uitofp-int-float(denominator)),
      sub-float(max, min),
    ),
  )
}
