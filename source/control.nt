import {
- core.bool
- core.unit {unit, Unit}
}

inline loop<result>(count: int, base: result, f: (result, int) -> result): result {
  let helper =
    define self(cursor, acc) {
      if ge-int(cursor, count) {
        acc
      } else {
        self(add-int(cursor, 1), f(acc, cursor))
      }
    }
  in
  helper(0, base)
}

inline discard<a>(_: a): unit {
  Unit
}
