import {
  core.bool,
  core.unit {Unit, unit},
}

inline loop<result>(count: int, base: result, f: (result, int) -> result): result {
  let helper =
    define self(cursor, acc): result {
      if ge-int(cursor, count) {
        acc
      } else {
        self(add-int(cursor, 1), f(acc, cursor))
      }
    }
  in
  helper(0, base)
}

define discard<a>(_: a): unit {
  Unit
}
