import {
  Ext,
  FD,
  FF,
  FM,
  this.bool,
  this.errno {report-system-error, system},
  this.except {Pass},
  this.list {list},
  this.text {_get-content-pointer, text},
  this.unit {Unit, unit},
}

define open(path: &text, xs: list(FF.flag), ms: list(FM.mode)): system(FD.descriptor) {
  let path' = this.text.append(path, "\0") in
  let actual-path-string on path' = _get-content-pointer(path') in
  let fd = Ext.open(actual-path-string, FF.interpret(xs), FM.interpret(ms)) in
  let _ = path' in
  if lt-int(magic cast(FD.descriptor, int, fd), 0) {
    report-system-error()
  } else {
    Pass(fd)
  }
}

define close(f: FD.descriptor): system(unit) {
  let result = Ext.close(f) in
  if eq-int(result, 0) {
    Pass(Unit)
  } else {
    report-system-error()
  }
}
