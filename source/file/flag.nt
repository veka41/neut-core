import {
  this.foreign {O_APPEND, O_CREAT, O_RDONLY, O_RDWR, O_WRONLY},
  this.list {fold-left, list},
}

data flag {
| R
| W
| RW
| Append
| Create
}

define _interpret-flag(flag: flag): int {
  match flag {
  | R =>
    O_RDONLY
  | W =>
    O_WRONLY
  | RW =>
    O_RDWR
  | Create =>
    O_CREAT
  | Append =>
    O_APPEND
  }
}

define interpret(xs: list(flag)): int {
  fold-left(0, xs, function (acc, x) {
    or-int(acc, _interpret-flag(x))
  })
}

constant for-r: list(flag) {
  [R]
}

constant for-rw: list(flag) {
  [RW, Create]
}

constant for-rw-append: list(flag) {
  [RW, Create, Append]
}
