import {
- this.list [list]
}

data flag {
- R
- W
- RW
- Append
- Create
}

define interpret-flag(flag: flag): int {
  introspect os {
  - darwin =>
    // https://github.com/apple/darwin-xnu/blob/main/bsd/sys/fcntl.h
    match flag {
    - R =>
      0x0000
    - W =>
      0x0001
    - RW =>
      0x0002
    - Create =>
      0x0200
    - Append =>
      0x0008
    }
  - linux =>
    // https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/fcntl.h
    match flag {
    - R =>
      0o00000000
    - W =>
      0o00000001
    - RW =>
      0o00000002
    - Create =>
      0o00000100
    - Append =>
      0o00002000
    }
  }
}

define interpret(xs: list(flag)): int {
  match xs {
  - [] =>
    0
  - f :: ys =>
    or-int(interpret-flag(f), interpret(ys))
  }
}

define for-r(): list(flag) {
  [R]
}

define for-rw(): list(flag) {
  [RW, Create]
}

define for-rw-append(): list(flag) {
  [RW, Create, Append]
}
