import {
- this.bool
- this.list
- this.text
- this.text.io
- this.top
- this.external
- this.memory
- this.arch => arch
}

export {
- admit
- get-argc
- get-argv
}

define admit[a](t: &text): a {
  let _ = print(t)
  exit(1)
}

define get-argc(): int {
  let argc-ptr: int = magic global("neut-unsafe-argc", pointer)
  let argc: int = load-int(argc-ptr)
  argc
}

define get-argv(): list(text) {
  let argc = get-argc()
  let argv-ptr: int = magic global("neut-unsafe-argv", pointer)
  let argv: int = load-int(argv-ptr)
  let u = arch.unit()
  let f =
    define get-argv-helper(i: int): list(text) {
      if eq-int(i, argc) {
        []
      } else {
        let rest = get-argv-helper(add-int(i, 1))
        let str-ptr-ptr = add-int(argv, mul-int(i, u))
        let str-ptr = load-int(str-ptr-ptr)
        let t = unsafe-from-c-string(str-ptr)
        t :< rest
      }
    }
  f(0)
}
