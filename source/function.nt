define flip(a: tau, b: tau, c: tau, f: (a, b) -> c): (b, a) -> c {
  (y, x) => {
    f(x, y)
  }
}

define compose(a: tau, b: tau, c: tau, f: a -> b, g: b -> c): a -> c {
  (x) => {
    g(f(x))
  }
}

define curry(a: tau, b: tau, c: tau, f: (a, b) -> c): a -> b -> c {
  (x) => {
    (y) => {
      f(x, y)
    }
  }
}

define uncurry(a: tau, b: tau, c: tau, f: a -> b -> c): (a, b) -> c {
  (x, y) => {
    f(x)(y)
  }
}
