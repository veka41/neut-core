import {
  Magic,
  this.c-string {c-string, from-c-string},
  this.either {Left, either},
  this.foreign {get-errno},
  this.text {text},
}

data errno {
| Errno(int)
}

inline system(a: type): type {
  either(errno, a)
}

define get-system-error(): errno {
  Errno(get-errno())
}

define report-system-error<a>(): system(a) {
  Left(get-system-error())
}

foreign {
  strerror(int): pointer,
}

define get-error-message(e: errno): text {
  let Errno(i) = e in
  let c-str = magic external strerror(i) in
  from-c-string(Magic.cast(int, c-string, c-str))
}
