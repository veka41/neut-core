import {
- this.bool
- this.unit
- this.file.seek => seek
- this.file.descriptor => FD
}

export {
- exit
- malloc
- free
- realloc
- open
- close
- write
- read
- lseek
- sleep
- thread-create
- thread-exit
- thread-join
- thread-mutex-size
- thread-cond-size
- thread-mutex-init
- thread-mutex-destroy
- thread-mutex-lock
- thread-mutex-unlock
- thread-cond-init
- thread-cond-destroy
- thread-cond-wait
- thread-cond-signal
}

define exit[a](status: int): a {
  introspect target-os {
  - darwin =>
    magic external(exit, status)
  - linux =>
    magic external(exit, status)
  }
}

define malloc(size: int): int {
  introspect target-os {
  - darwin =>
    magic external(malloc, size)
  - linux =>
    magic external(malloc, size)
  }
}

define free(ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(free, ptr)
  - linux =>
    magic external(free, ptr)
  }
}

define realloc(ptr: int, size: int): int {
  introspect target-os {
  - darwin =>
    magic external(realloc, ptr, size)
  - linux =>
    magic external(realloc, ptr, size)
  }
}

define open(path-address: int, oflag: int, mode: int): FD.descriptor {
  introspect target-os {
  - darwin =>
    magic external(open, path-address, oflag, mode)
  - linux =>
    magic external(open, path-address, oflag, mode)
  }
}

define close(f: FD.descriptor): unit {
  introspect target-os {
  - darwin =>
    magic external(close, f)
  - linux =>
    magic external(close, f)
  }
}

define write(f: FD.descriptor, content-pointer: int, len: int): int {
  introspect target-os {
  - darwin =>
    magic external(write, f, content-pointer, len)
  - linux =>
    magic external(write, f, content-pointer, len)
  }
}

define read(f: FD.descriptor, content-pointer: int, max-read-size: int): int {
  introspect target-os {
  - darwin =>
    magic external(read, f, content-pointer, max-read-size)
  - linux =>
    magic external(read, f, content-pointer, max-read-size)
  }
}

define lseek(f: FD.descriptor, offset: int, seek-mode: int): int {
  introspect target-os {
  - darwin =>
    magic external(lseek, f, offset: int, seek-mode)
  - linux =>
    magic external(lseek, f, offset: int, seek-mode)
  }
}

define sleep(seconds: int): unit {
  introspect target-os {
  - darwin =>
    magic external(sleep, seconds)
  - linux =>
    magic external(sleep, seconds)
  }
}

define thread-create(id-ptr: int, thread-func-addr: int, thread-env-addr: int): int {
  introspect target-os {
  - darwin =>
    magic external(pthread_create, id-ptr, 0: int, thread-func-addr, thread-env-addr)
  - linux =>
    magic external(pthread_create, id-ptr, 0: int, thread-func-addr, thread-env-addr)
  }
}

define thread-exit(result-addr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_exit, result-addr)
  - linux =>
    magic external(pthread_exit, result-addr)
  }
}

define thread-join(id: int, result-addr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_join, id, result-addr)
  - linux =>
    magic external(pthread_join, id, result-addr)
  }
}

inline thread-mutex-size(): int {
  introspect target-platform {
  - amd64-darwin =>
    64
  - arm64-darwin =>
    64
  - amd64-linux =>
    40
  - arm64-linux =>
    48
  }
}

define thread-mutex-init(mutex-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_mutex_init, mutex-ptr, 0: int)
  - linux =>
    magic external(pthread_mutex_init, mutex-ptr, 0: int)
  }
}

define thread-mutex-destroy(mutex-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_mutex_destroy, mutex-ptr)
  - linux =>
    magic external(pthread_mutex_destroy, mutex-ptr)
  }
}

define thread-mutex-lock(mutex-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_mutex_lock, mutex-ptr)
  - linux =>
    magic external(pthread_mutex_lock, mutex-ptr)
  }
}

define thread-mutex-unlock(mutex-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_mutex_unlock, mutex-ptr)
  - linux =>
    magic external(pthread_mutex_unlock, mutex-ptr)
  }
}

inline thread-cond-size(): int {
  introspect target-platform {
  - amd64-darwin =>
    48
  - arm64-darwin =>
    48
  - amd64-linux =>
    48
  - arm64-linux =>
    48
  }
}

define thread-cond-init(cond-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_cond_init, cond-ptr, 0: int)
  - linux =>
    magic external(pthread_cond_init, cond-ptr, 0: int)
  }
}

define thread-cond-destroy(cond-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_cond_destroy, cond-ptr)
  - linux =>
    magic external(pthread_cond_destroy, cond-ptr)
  }
}

define thread-cond-signal(cond-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_cond_signal, cond-ptr)
  - linux =>
    magic external(pthread_cond_signal, cond-ptr)
  }
}

define thread-cond-wait(cond-ptr: int, mutex-ptr: int): unit {
  introspect target-os {
  - darwin =>
    magic external(pthread_cond_wait, cond-ptr, mutex-ptr)
  - linux =>
    magic external(pthread_cond_wait, cond-ptr, mutex-ptr)
  }
}
