import {
  this.bool {True},
  this.bool.show,
  this.external {sleep},
  this.int.show {%ld},
  this.list {list},
  this.text,
  this.text.io {print, printf},
  this.thread,
  this.unit {Unit, unit},
}

constant my-bool: tau {
  this.bool.bool
}

define make-bool(): my-bool {
  True
}

constant some-int-list: list(int) {
  [1, 2, 3]
}

define increment(x: int): int {
  add-int(x, 1)
}

define main(): unit {
  Unit
}

define zen(): unit {
  let fl =
    detach {
      print("hello\n");
      3
    }
  in
  let b1 on fl = this.thread.is-finished(fl) in
  sleep(1);
  let b2 on fl = this.thread.is-finished(fl) in
  print("hey\n");
  let x = attach {fl} in
  printf("result-int: {}\n", [%ld(x)]);
  printf("b1: {}\n", [this.bool.show.show(b1)]);
  printf("b2: {}\n", [this.bool.show.show(b2)]);
  Unit
}
