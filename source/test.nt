import {
  this.bool {True},
  this.list {list},
  this.unit {Unit, unit},
}

constant my-bool: tau {
  this.bool.bool
}

define make-bool(): my-bool {
  True
}

constant some-int-list: list(int) {
  [1, 2, 3]
}

define increment(x: int): int {
  add-int(x, 1)
}

define main(): unit {
  Unit
}

define zen(): unit {
  // let t1 = *"test" in
  // let tmp = drop(1, *"ate") in
  // let t2 on tmp = append(tmp, "st") in
  // let b on t1, t2 = eq-text(t1, t2) in
  // use this.bool.show.as-show {show} in
  // // let Show(f) = as-show in
  // printf("{}\n", [show(b)]);
  Unit
}
